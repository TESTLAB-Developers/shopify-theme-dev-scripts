#!/bin/bash

display_usage() { 
	echo "Beautify a Shopify JSON file by using jq to expand (and escape slashes)." >/dev/tty
	echo -e "Usage:\n$0 -h | [-v] <filename>" >/dev/tty
	}
 
display_help() { 
  display_usage
	echo "Options:"
	#echo -e " -v \tVerbose mode."
	echo -e " -h \tPrint this help message."
	echo -e " -x \tDon't escape forward slashes with: '\\'"
	echo ""
	}

verbose='false'
hflag='false'
xflag='false'

while getopts 'hx' flag; do
  case "${flag}" in
    #v) verbose='true' ;;
    h) hflag='true' ;;
    x) xflag='true' ;;
    *) error "Unexpected option ${flag}" ;;
  esac
done

if [ "$hflag" == "true" ]; then
    display_help
    exit 0
fi

# Count positional arguments left
let "posArgCount = $# + 1 - $OPTIND" 1

filename=""

if [ "$posArgCount" -gt 1 ]; then
    echo -e "Unexpected arguments after '${@:$OPTIND:1}': ${@:$OPTIND+1}\n" >&2
    display_usage
    echo ""
    exit 1
elif [ "$posArgCount" -gt 0 ]; then
    filename=${@:$OPTIND:1}
else
    echo -e "Too few arguments given: expected 1 argument\n" >&2
    display_usage
    echo ""
    exit 1
fi 

if [ ! -f "$filename" ]; then
    echo "Could not find file: $filename"
    exit 1
fi

fileDir="$(dirname "${filename}")"
filenameBase="$(basename "${filename}" .json)"
filenameNew="${fileDir}/${filenameBase}.pretty.json"

# Beautify JSON file
echo "Beautifying JSON file ${filename} to: ${filenameNew}"
jq '.' ${filename} >${filenameNew}

# Escape all forward slashses
if [ "$xflag" != "true" ]; then
  os_name=$(uname)
  if [[ "$os_name" == "Darwin" ]]; then
    sed -i '' -e 's@/@\\/@g' ${filenameNew}
  else
    sed -i 's@/@\\/@g' ${filenameNew}
  fi
fi
